class MyIntSet{
public:
    MyIntSet():num(0){}

    MyIntSet(int a[], int n){
        if(n > MAX_SIZE) {
          num = MAX_SIZE;
        }
        else{
          num = n;
        }
        for(int i = 0; i < num; i++){
         elements[i] = a[i];
        }
    }

    bool insertVal(int v){
      if(findVal(v)){
        return false;
      }
      if(num == MAX_SIZE){
        return false;
      }
      elements[num] = v;
      num++;
      return true;
    }

    bool eraseVal(int v){
      if(!findVal(v)){
        return false;
      }
      for(int i = 0; i < num; i++){
        if(elements[i] == v){
          for(int j = i +1; j < num; j++){
            elements[j - 1] = elements[j];
          }
          num--;
          return true;
        }
      }
      return false;
    }

    void clearAll(){
      num = 0;
    }

    bool findVal(int v) const{
      for(int i = 0; i < num; i++ ){
        if(elements[i] == v){
          return true;
        }
      }
      return false;
    }

    bool isEmpty() const{
      if (num == 0){
        return true;
      }
      return false;
    }

    int getSize() const{
      return num;
    }

    const int* getBeginPtr() const{
      return elements;
    }

    const int* getEndPtr() const{
      return elements + num - 1;
    }
private:
    static const int MAX_SIZE = 1000;
    int elements[MAX_SIZE];
    int num; // count real values in this set
};