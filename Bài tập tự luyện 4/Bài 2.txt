#include <bits/stdc++.h>
using namespace std;
int main(){
    int  x, y;
    cin >> x >> y;
    int a[100];
    int b[100];
    for(int i = 0; i < x; i++){
        cin >> a[i];
    }    
    for(int i = 0; i < y; i++){
        cin >> b[i];
    }
    //sort phai nhu nay chu khong +1 -> so 0 o dau
    sort(a, a+x);
    sort(b, b+y);
    vector <int> c;
    for(int i = 1; i <= b[0]; i++){
        if(b[0] % i == 0){
            c.push_back(i);
        }
    }
    for(int i = 1; i < y; i++){
        for(int j = (int)c.size()-1; j >= 0; j--){
            if(b[i] % c[j] != 0){
                c.erase(c.begin() + j);
            }
        }
    }
    //int k = 0;
    int count = c.size();
    for(int i = 0; i < x;i++){
        for(int j = (int) c.size()-1; j >= 0; j--){
            if(c[j] % a[i] != 0){
                 c.erase(c.begin() + j);  
                 //c[j] = 0; 
                 //k--;     
                 count -- ;      
            }
        }
    }
    cout << c.size();
    return 0;
}

//Có thể tham khảo code này để khảo sát
// #include <bits/stdc++.h>
// using namespace std;
// int main(){
//     int  x, y;
//     cin >> x >> y;
//     int a[100];
//     int b[100];
//     for(int i = 0; i < x; i++){
//         cin >> a[i];
//     }    
//     for(int i = 0; i < y; i++){
//         cin >> b[i];
//     }
//     //sort phai nhu nay chu khong +1 -> so 0 o dau
//     sort(a, a+x);
//     sort(b, b+y);
//     vector <int> c;
    
//     for(int i = 1; i <= b[0]; i++){
//         if(b[0] % i == 0){
//             c.push_back(i);
//         }
//     }
//     cout << "Dãy c là ước của b[0] : ";
//     for(int i = 0; i < (int)c.size();i++){
//         cout << c[i] << " ";
//     }
//     cout << endl; 
    
//     for(int i = 0; i < y; i++){
//         for(int j = 0; j < (int)c.size();j++){
//         //for(int j = (int)c.size()-1; j >= 0; j--){
//             if(b[i] % c[j] != 0){
//                 c.erase(c.begin() + j);
//                 j--;
//             }
//         }
//     }

//     cout << "Dãy c là ước chung của cả mảng b : ";
//     for(int i = 0; i < (int)c.size();i++){
//         cout << c[i] << " ";
//     }
//     cout << endl;
    
//     for(int i = 0; i < x; i++){
//         for(int j = (int) c.size()-1; j >= 0; j--){
//             if(c[j] % a[i] != 0){
//                  c.erase(c.begin() + j); 
//             }
//         }
//     }
//     cout <<"Dãy số chung : ";
//     for(int i = 0; i < (int)c.size();i++){
//         cout << c[i] << " ";
//     }
//     return 0;
// }

//Ta sẽ dùng j-- thì sẽ phù hợp hơn
//Nếu dùng j++ thì sẽ phải j-- sau mỗi lần thỏa mãn
//Ta xét TH 
//3 3
//1 3 6
//18 30 36
//Sau khi tìm ước của b[0] và tiếp tục tìm ước chung của cả mảng
//Khi mà ta xét đến số 9 thỏa mãn (j=4, size = 6)
//Sau đó j++ thì j=5, size=5(vì xóa đi thì size nhỏ đi) mà điều kiện là j<c.size() => j=5 không được xét




//Bài cách khác
// //#include <iostream>
// #include<algorithm>
// using namespace std;

// int gcdOfTwo (int x, int y);
// int gcdOfArr(int arr[], int len);
// int lcmOfTwo (int x, int y);
// int lcmOfArr(int arr[], int len);
// void find(int gcd, int lcm);

// int main() {
//     int lenA, lenB;
//     cin >> lenA >> lenB;
//     int a[1000], b[1000];
//     for (int i = 0; i < lenA; i++) {
//         cin >> a[i];
//     }
//     for (int i = 0; i < lenB; i++) {
//         cin >> b[i];
//     }
//     //PHẢI SORT ĐÃ NHA BÀ
//     // sort(a,a+lenA);
//     // sort(b,b+lenB);
    
//     int gcd = gcdOfArr(b,lenB);
//     int lcm = lcmOfArr(a,lenA);
//     find(gcd,lcm);
//     return 0;
// }
// //Ước chung lớn nhất của 2 số
// int gcdOfTwo (int x, int y) {
//     if (x == y)
//         return x;
//     else if (x > y)
//         return gcdOfTwo(x-y, y);
//     else
//         return gcdOfTwo(x,y-x);
// }
// //Ước chung lớn nhất của cả mảng b
// int gcdOfArr(int arr[], int len) {
//     int res = arr[0];
//     for (int i = 1; i < len; i++) {
//         return gcdOfTwo(arr[i],res);
//         if (res == 1)
//             return 1;
//     }
//     return res;
// }
// //Bội chung nhỏ nhất của 2 số
// int lcmOfTwo (int a, int b) {
//     return a/(gcdOfTwo(a,b))*b;
// }
// //Bội chung nhỏ nhất của cả mảng
// int lcmOfArr(int arr[], int len) {
//     int res = arr[0];
//     for (int i = 1; i < len; i++) {
//         res = (arr[i]*res)/gcdOfTwo(arr[i],res);
//     }
//     return res;
// }
// //Tìm số chung
// void find(int gcd, int lcm) {
//     int cnt = 0;
//     for (int i = lcm; i <= gcd; i++) {
//         if (i % lcm == 0 && gcd % i == 0) {
//             cnt ++;
//         }
//     }
//     cout << cnt;
// }